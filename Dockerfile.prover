FROM fpco/stack-build-small:latest as dependencies
RUN mkdir /opt/build
WORKDIR /opt/build

# GHC dynamically links its compilation targets to lib gmp
RUN apt-get update && apt-get download libgmp10
RUN mv libgmp*.deb libgmp.deb
RUN apt-get install -y libexpat1-dev liblmdb-dev liblzma-dev libz-dev pkg-config

# Docker build should not use cached layer if any of these is modified
COPY stack.yaml /opt/build/
COPY package-template.yaml  /opt/build/package.yaml
RUN stack build rpki-prover:rpki-prover --system-ghc --dependencies-only

# -------------------------------------------------------------------------------------------
FROM fpco/stack-build-small:latest as rpki_prover_build

# Copy compiled dependencies from previous stage
COPY --from=dependencies /root/.stack /root/.stack
COPY . /opt/build/

WORKDIR /opt/build

RUN apt-get update && apt-get install -y libexpat1-dev liblmdb-dev liblzma-dev libz-dev pkg-config
RUN stack build rpki-prover:rpki-prover --system-ghc

RUN mv "$(stack path --local-install-root --system-ghc)/bin" /opt/build/bin

# -------------------------------------------------------------------------------------------
# Base image for stack build so compiled artifact from previous
# stage should run
FROM ubuntu:22.04 as prover

# Add the libraries we need to run the application
RUN apt-get update && apt-get install -y libgmp-dev libexpat1-dev liblmdb-dev liblzma-dev curl rsync libz-dev

VOLUME /rpki-data/

RUN mkdir -p /opt/app
WORKDIR /opt/app

COPY --from=rpki_prover_build /opt/build/bin .
EXPOSE 9999
ENTRYPOINT [ "/opt/app/rpki-prover", "--rpki-root-directory", "/rpki-data" ]
